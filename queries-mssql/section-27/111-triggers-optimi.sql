/* OTIZAMIZANDO TRIGGERS COM SELECT */
SELECT 10 + 10
GO

CREATE TABLE RESULTADO (
    IDRESULTADO INT PRIMARY KEY IDENTITY,
    RESULTADO INT
)
GO

/* INSERINDO RESULTADO DE OPERAÇÃO MATEMÁTICA */
INSERT INTO RESULTADO VALUES ((SELECT 10 + 10))
GO

SELECT * FROM RESULTADO
GO

/*
    ATRIBUINDO SELECTS A VARIÁVEIS - ANÔNIMO
    AS VARIÁVEIS NÃO FICAM PERSISTIDAS NO BANCO.
*/
DECLARE
    @RESULTADO INT
    SET @RESULTADO = (SELECT 10 + 10)
    INSERT INTO RESULTADO VALUES (@RESULTADO)
    GO

DECLARE
    @RESULTADO INT
    SET @RESULTADO = (SELECT 16 + 16)
    INSERT INTO RESULTADO VALUES (@RESULTADO)
    PRINT 'VALOR: [+] ' + CAST(@RESULTADO AS VARCHAR)
    GO

/*
    TRIGGER UPDATE
    O TIPO MONEY JÁ VEM COM [.00] ATRIBUIDO
    O TIPO NUMERIC PODE SER ATRIBUIDO VALORES ALEATÓRIOS
*/
CREATE TABLE EMPREGADO (
    IDEMP INT PRIMARY KEY IDENTITY,
    NOME VARCHAR(30),
    SALARIO MONEY,
    IDGERENTE INT
)
GO

/* ADICIONANDO REGRA PARA CHAVE ESTRANGEIRA [1xN] */
ALTER TABLE EMPREGADO ADD CONSTRAINT FK_GERENTE
    FOREIGN KEY(IDGERENTE) REFERENCES EMPREGADO(IDEMP)
GO

/* INSERINDO DADOS NA TABELA EMPREGADO */
INSERT INTO EMPREGADO VALUES ('CLARA', 5000.00, NULL)
INSERT INTO EMPREGADO VALUES ('CELIA', 4000.00, 1)
INSERT INTO EMPREGADO VALUES ('JOAO', 4000.00, 1)
GO

/*
    CRIANDO TABELA PARA OPERAÇÕES COM TRIGGERS
    O SELECT PARA INSERÇÃO, TEM QUE SER DESCRITO
    NA MESMA ORDEM QUE FORAM ATRIBUIDOS NO INSERT.
*/
CREATE TABLE HIST_SALARIO (
    IDEMPREGADO INT,
    ANTIGOSAL MONEY,
    NOVOSAL MONEY,
    DATA DATETIME
)
GO

CREATE TRIGGER TRG_SALARIO
    ON DBO.EMPREGADO
        FOR UPDATE AS
        IF UPDATE(SALARIO)
BEGIN

    INSERT INTO HIST_SALARIO
    (IDEMPREGADO, ANTIGOSAL, NOVOSAL, DATA)
    SELECT D.IDEMP, D.SALARIO, I.SALARIO, GETDATE()
    FROM DELETED D, INSERTED I
    WHERE D.IDEMP = I.IDEMP

END
GO

UPDATE EMPREGADO SET SALARIO = SALARIO * 1.1
GO

SELECT * FROM EMPREGADO
GO

SELECT * FROM HIST_SALARIO
GO
