/* COMUNICAÇÃO ENTRE DOIS BANCOS DE DADOS COM TRIGGERS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO (
    IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    VALOR FLOAT(10,2)
);

STATUS

/* DATABASE PARA BACKUP LÓGICO */
CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
    IDBKP INT PRIMARY KEY AUTO_INCREMENT,
    IDPRODUTO INT,
    NOME VARCHAR(20),
    VALOR FLOAT(10,2)
);

USE LOJA;

/*
    COMUNICAÇÃO ENTRE BANCO DE DADOS.
    O QUE REALIZA A COMUNICAÇÃO ENTRE 
    BANCOS DE DADOS É O '.' ENTRE O NOME
    DO BANCO E A TABELA QUE VOCÊ PRECISA
    REALIZAR ALGUMA OPERAÇÃO [BANCODEDADOS.TABELA].
 */

INSERT INTO BACKUP.BKP_PRODUTO VALUES (NULL,1000,'TESTE',0.0);
SELECT * FROM BACKUP.BKP_PRODUTO;

/*
    'TRIGGER' PARA SALVAR BACKUP DE INSERÇÃO
    EM OUTRO BANCO DE DADOS.
    ATENÇÃO AO TEMPO DO 'TRIGGER', POR SE TRATAR
    DE UMA INSERÇÃO NO 'BLOCO DE PROGRAMAÇÃO',
    É UTILIZADO O 'NEW' CONCATENANDO COM O NOME
    DA COLUNA QUE IRÁ RECEBER OS DADOS.
*/

/*
    SEMPRE TROQUE O 'DELIMITER' ANTES DE CRIAR
    UMA 'TRIGGER'.
*/

DELIMITER $
CREATE TRIGGER BACKUP_PRODUTO
    BEFORE INSERT ON PRODUTO
    FOR EACH ROW
    BEGIN
        INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);
    END$
DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;/*
+-------+-----------+------------------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  |
+-------+-----------+------------------+--------+
|     1 |      1000 | TESTE            |   0.00 |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 |
|     3 |         0 | LIVRO BI         |  80.00 |
|     4 |         0 | LIVRO ORACLE     |  70.00 |
|     5 |         0 | LIVRO SQL SERVER | 100.00 |
+-------+-----------+------------------+--------+

Obs.:O IDPRODUTO VEM COMO '0' PORQUE OS DADOS SÃO CAPTURADOS
ANTES [BEFORE] DA INSERÇÃO NA TABELA PRINCIPAL.
*/

/*
    TRIGGER PARA BACKUP DE DELETE.
    OS DADOS DE BACKUP SERÁ SALVO EM OUTRO BANCO DE DADOS.
    POR SE TRATAR DE UMA DELETE NO 'BLOCO DE PROGRAMAÇÃO',
    É UTILIZADO 'OLD' CONCATENANDO COM O NOME DA COLUNA
    QUE IRÁ RECEBER OS DADOS DE BACKUP.
*/

DELIMITER $
CREATE TRIGGER BACKUP_PRODUTO_DEL
    BEFORE DELETE ON PRODUTO
    FOR EACH ROW
    BEGIN
        INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL, OLD.IDPRODUTO, OLD.NOME, OLD.VALOR);
    END$
DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

/*
    'TRIGGER' PARA BACKUP DE 'INSERT' EM OUTRO
    BANCO DE DADOS DEPOIS [AFTER] DE OS DADOS TEREM
    SIDOS INSERIDOS NA TABELA PRINCIPAL.
*/
DELIMITER $
CREATE TRIGGER BACKUP_PRODUTO_INSERT_AFTER
    AFTER INSERT ON PRODUTO
    FOR EACH ROW
    BEGIN
        INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL, NEW.IDPRODUTO, NEW.NOME, NEW.VALOR);
    END$
DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO C++',100.00);
SELECT * FROM BACKUP.BKP_PRODUTO;/*
+-------+-----------+------------------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  |
+-------+-----------+------------------+--------+
|     1 |      1000 | TESTE            |   0.00 |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 |
|     3 |         0 | LIVRO BI         |  80.00 |
|     4 |         0 | LIVRO ORACLE     |  70.00 |
|     5 |         0 | LIVRO SQL SERVER | 100.00 |
|     6 |         2 | LIVRO BI         |  80.00 |
|     7 |         0 | LIVRO C#         | 100.00 |
|     8 |         5 | LIVRO C#         | 100.00 |
|     9 |         0 | LIVRO C++        | 100.00 |
|    10 |         6 | LIVRO C++        | 100.00 |
+-------+-----------+------------------+--------+

NESTE MOMENTO OS DOIS TRIGGERS ESTÃO SALVANDO
BACKUPS DE INSERÇÃO EM OUTRO BANCO DE DADOS.
UM COM IDPRODUTO COM VALOR 0 [DADOS CAPTURADOS
ANTES 'BEFORE' DA INSERÇÃO NA TABELA PRINCIAPAL],
E OUTRO COM O IDPRODUTO COM SEU RESPECTIVO
ID [DADOS CAPTURADOS DEPOIS 'AFTER' DA INSERÇÃO
NA TABELA PRINCIPAL]*/
