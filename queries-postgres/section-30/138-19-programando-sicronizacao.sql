/* DEIXANDO PROCEDIMENTO AUTOMÁTICO POR MEIO DE TRIGGER */
/*
    PRIMEIRO CRIA UMA FUNÇÃO E DEPOIS CRIA O TRIGGER
    PARA FICAR OLHANDO PARA TABELA
        - ESTRTURA BÁSICA DE UMA FUNCTION NO POSTGRES:
        CREATE OR REPLACE FUNCTION ATUALIZA_REL()
            RETURN TRIGGER AS $$
                BEGIN

                
                RETURN NEW
        END;
        $$
        LANGUAGE PLPGSQL;
*/

CREATE OR REPLACE FUNCTION ATUALIZA_REL()
    RETURNS TRIGGER AS $$
        BEGIN
            INSERT INTO RELATORIO_LOCADORA
            SELECT L.IDLOCACAO, F.NOME AS FILME, G.NOME AS GENERO, L.DATA AS DATA, L.DIAS AS DIAS, L.MIDIA AS MIDIA
                FROM GENERO G
                    INNER JOIN FILME F
                        ON G.IDGENERO = F.ID_GENERO
                    INNER JOIN LOCACAO L
                        ON L.ID_FILME = F.IDFILME
                    WHERE IDLOCACAO NOT IN (SELECT IDLOCACAO FROM RELATORIO_LOCADORA);
            COPY RELATORIO_LOCADORA TO
                '/tmp/RELATARIO_LOCADORA.csv'
                DELIMITER ','
                CSV HEADER;
    RETURN NEW;
END;
$$
LANGUAGE PLPGSQL;

/* DELETA TRIGGER */
DROP TRIGGER TG_RELATORIO ON LOCACAO;

CREATE TRIGGER TG_RELATORIO
    AFTER INSERT ON LOCACAO
    FOR EACH ROW
        EXECUTE PROCEDURE ATUALIZA_REL();

/* INSERINDO NOVOS REGISTROS */
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),100,7,300);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),500,1,200);
INSERT INTO LOCACAO VALUES(NEXTVAL('SEQ_LOCACAO'),NOW(),800,6,500);

SELECT * FROM LOCACAO;
SELECT * FROM RELATORIO_LOCADORA;
